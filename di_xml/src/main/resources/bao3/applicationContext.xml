<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd">
       <!--
       声明student对象：
       注入就是赋值的意思
       简单类型：spring中规定java的基本数据类型和string都是简单类型
       di给属性赋值
       1.set注入（设置注入）：spring调用类的set方法，可以在set方法中完成属性的赋值
       1）简单的set注入
       <bean id="" class="">
            <property name="属性名字" value="此属性的值">
            一个property只能给一个属性赋值
            </property>
       </bean>
       2)引用类型的set注入
        <bean id="" class="">
            <property name="属性名字" ref="bean的id(对象的名称)">
            </property>
         </bean>
        2.构造注入，spring调用类有参构造方法，在创建对象的同时，在构造方法中给属性赋值。
        构造注入使用<constructor-arg>标签
        <constructor-arg>标签参数
        name表示构造方法的形参名
        index表示构造方法的参数位置，从左往右的位置是0，1，2的顺序
        value表示构造方法的形参类型
        ref构造方法的形参类型是引用类型，使用ref
       -->
        <bean id="myStudent" class="bao3.Student">
            <constructor-arg name="id" value="12"></constructor-arg>
            <constructor-arg name="name" value="张三"></constructor-arg>
            <constructor-arg name="school" ref="mySchool"></constructor-arg>
        </bean>
    <!--可以省略index，但是需要注意顺序-->
         <bean id="myStudent2" class="bao3.Student">
        <constructor-arg index="0" value="李四"></constructor-arg>
        <constructor-arg index="1" value="14"></constructor-arg>
        <constructor-arg index="2" ref="mySchool"></constructor-arg>
        </bean>
        <bean id="mySchool" class="bao3.School">
            <property name="name" value="一中"></property>
            <property name="address" value="北京"></property>
        </bean>

    <!--File构造注入
    -->
    <bean id="myFile" class="java.io.File">
        <constructor-arg name="parent" value="G:\java_struct\Spring\spring_hello\di_xml"></constructor-arg>
        <constructor-arg name="child" value="readme.txt"></constructor-arg>
    </bean>

</beans>